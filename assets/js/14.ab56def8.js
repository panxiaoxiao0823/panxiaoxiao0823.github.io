(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{970:function(e,t,r){"use strict";r.r(t);var a=r(23),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"声明文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#声明文件"}},[e._v("#")]),e._v(" 声明文件")]),e._v(" "),r("ClientOnly",[r("click")],1),e._v(" "),r("h2",{attrs:{id:"新语法索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#新语法索引"}},[e._v("#")]),e._v(" 新语法索引")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[r("Badge",{attrs:{text:"总结"}})],1),e._v(" "),r("p",[e._v("declare var 声明全局变量"),r("br"),e._v("\ndeclare function 声明全局方法"),r("br"),e._v("\ndeclare class 声明全局类"),r("br"),e._v("\ndeclare enum 声明全局枚举类型"),r("br"),e._v("\ndeclare namespace 声明（含有子属性的）全局对象"),r("br"),e._v("\ninterface 和 type 声明全局类型"),r("br"),e._v("\nexport 导出变量"),r("br"),e._v("\nexport namespace 导出（含有子属性的）对象"),r("br"),e._v("\nexport default ES6 默认导出"),r("br"),e._v("\nexport = commonjs 导出模块"),r("br"),e._v("\nexport as namespace UMD 库声明全局变量"),r("br"),e._v("\ndeclare global 扩展全局变量"),r("br"),e._v("\ndeclare module 扩展模块"),r("br"),e._v(" "),r("code",[e._v("/// <reference />")]),e._v(" 三斜线指令")])]),e._v(" "),r("p",[e._v("其他略，见"),r("a",{attrs:{href:"https://ts.xcatliu.com/basics/declaration-files.html#%E6%96%B0%E8%AF%AD%E6%B3%95%E7%B4%A2%E5%BC%95",target:"_blank",rel:"noopener noreferrer"}},[e._v("TypeScript入门教程"),r("OutboundLink")],1)])],1)}),[],!1,null,null,null);t.default=n.exports}}]);