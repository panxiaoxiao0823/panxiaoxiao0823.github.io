(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{973:function(t,a,e){"use strict";e.r(a);var n=e(23),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"变量声明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量声明"}},[t._v("#")]),t._v(" 变量声明")]),t._v(" "),e("ClientOnly",[e("click")],1),t._v(" "),e("h2",{attrs:{id:"var存在的一些问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#var存在的一些问题"}},[t._v("#")]),t._v(" var存在的一些问题")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("for (var i = 0; i < 10; i++) {\n    setTimeout(function() { console.log(i); }, 100 * i);\n}\n//10 10 10 10...\n")])])]),e("p",[t._v("上面代码结果都是10是因为我们传给setTimeout的每一个函数表达式实际上都引用了相同作用域里的同一个i。解决办法：使用立即执行的匿名函数")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("for (var i = 0; i < 10; i++) {\n    (function(num) {\n        setTimeout(function() { console.log(num); }, 100 * num);\n    })(i); //匿名函数的参数num其实相当于复制了i的值，所以返回的都是不同的i值\n}\n//0 1 2 3 4 5 6 7 8 9 \n")])])]),e("h2",{attrs:{id:"对象展开-剩余运算符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象展开-剩余运算符"}},[t._v("#")]),t._v(" 对象展开 剩余运算符")]),t._v(" "),e("p",[t._v("对象展开还有其它一些意想不到的限制。 首先，它仅包含对象 自身的可枚举属性。 大体上是说当你展开一个对象实例时，你会丢失其方法：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("class C {\n  p = 12;\n  m() {\n  }\n}\nlet c = new C();\nlet clone = { ...c };\nclone.p; // ok\nclone.m(); // error!\n")])])])],1)}),[],!1,null,null,null);a.default=s.exports}}]);